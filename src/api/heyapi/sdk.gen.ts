// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from '@/http/client-mp';
import type { GetData, GetResponse, GetV1GetByOrganizationSlugByProjectSlugData, GetV1GetByOrganizationSlugByProjectSlugResponse, GetV1GetByOrganizationSlugByProjectSlugError, PostV1InternalSyncUsersData, PostV1InternalSyncUsersResponse, PostV1InternalSyncUsersError, PostV1InternalWebhooksClerkData, PostV1InternalWebhooksClerkResponse, PostV1InternalWebhooksClerkError, PostV1InternalWebhooksHeyApiData, PostV1InternalWebhooksHeyApiResponse, PostV1InternalWebhooksHeyApiError, GetV1OrganizationsData, GetV1OrganizationsResponse, GetV1OrganizationsError, PostV1OrganizationsData, PostV1OrganizationsResponse, PostV1OrganizationsError, DeleteV1OrganizationsByOrganizationSlugData, DeleteV1OrganizationsByOrganizationSlugResponse, DeleteV1OrganizationsByOrganizationSlugError, GetV1OrganizationsByOrganizationSlugMembersData, GetV1OrganizationsByOrganizationSlugMembersResponse, GetV1OrganizationsByOrganizationSlugMembersError, PostV1OrganizationsByOrganizationSlugMembersData, PostV1OrganizationsByOrganizationSlugMembersResponse, PostV1OrganizationsByOrganizationSlugMembersError, DeleteV1OrganizationsByOrganizationSlugMembersByUserIdData, DeleteV1OrganizationsByOrganizationSlugMembersByUserIdResponse, DeleteV1OrganizationsByOrganizationSlugMembersByUserIdError, GetV1OrganizationsByOrganizationSlugProjectsData, GetV1OrganizationsByOrganizationSlugProjectsResponse, GetV1OrganizationsByOrganizationSlugProjectsError, PostV1OrganizationsByOrganizationSlugProjectsData, PostV1OrganizationsByOrganizationSlugProjectsResponse, PostV1OrganizationsByOrganizationSlugProjectsError, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugData, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugError, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysData, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysError, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysData, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysError, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdData, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdError, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdData, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdError, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsData, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsError, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdData, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdError, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdData, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdError, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlData, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlError, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksData, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksError, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksData, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksError, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError, PostV1SpecificationsData, PostV1SpecificationsResponse, PostV1SpecificationsError, GetV1UsersMeData, GetV1UsersMeResponse, GetV1UsersMeError, GetV1UsersByUserIdApiKeysData, GetV1UsersByUserIdApiKeysResponse, GetV1UsersByUserIdApiKeysError, PostV1UsersByUserIdApiKeysData, PostV1UsersByUserIdApiKeysResponse, PostV1UsersByUserIdApiKeysError, DeleteV1UsersByUserIdApiKeysByApiKeyIdData, DeleteV1UsersByUserIdApiKeysByApiKeyIdResponse, DeleteV1UsersByUserIdApiKeysByApiKeyIdError, PostV1UsersByUserIdApiKeysByApiKeyIdData, PostV1UsersByUserIdApiKeysByApiKeyIdResponse, PostV1UsersByUserIdApiKeysByApiKeyIdError, GetV1UsersByUserIdRolesData, GetV1UsersByUserIdRolesResponse, GetV1UsersByUserIdRolesError, GetV1UsersByUserIdWaitlistsData, GetV1UsersByUserIdWaitlistsResponse, GetV1UsersByUserIdWaitlistsError, PostV1UsersByUserIdWaitlistsData, PostV1UsersByUserIdWaitlistsResponse, PostV1UsersByUserIdWaitlistsError, DeleteV1UsersByUserIdWaitlistsByWaitlistIdData, DeleteV1UsersByUserIdWaitlistsByWaitlistIdResponse, DeleteV1UsersByUserIdWaitlistsByWaitlistIdError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const get = <ThrowOnError extends boolean = false>(options?: Options<GetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetResponse, unknown, ThrowOnError>({
        url: '/',
        ...options
    });
};

export const getV1GetByOrganizationSlugByProjectSlug = <ThrowOnError extends boolean = false>(options: Options<GetV1GetByOrganizationSlugByProjectSlugData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1GetByOrganizationSlugByProjectSlugResponse, GetV1GetByOrganizationSlugByProjectSlugError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            },
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/get/{organization_slug}/{project_slug}',
        ...options
    });
};

export const postV1InternalSyncUsers = <ThrowOnError extends boolean = false>(options?: Options<PostV1InternalSyncUsersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostV1InternalSyncUsersResponse, PostV1InternalSyncUsersError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/internal/sync-users',
        ...options
    });
};

export const postV1InternalWebhooksClerk = <ThrowOnError extends boolean = false>(options: Options<PostV1InternalWebhooksClerkData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1InternalWebhooksClerkResponse, PostV1InternalWebhooksClerkError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/internal/webhooks/clerk',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postV1InternalWebhooksHeyApi = <ThrowOnError extends boolean = false>(options: Options<PostV1InternalWebhooksHeyApiData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1InternalWebhooksHeyApiResponse, PostV1InternalWebhooksHeyApiError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/internal/webhooks/hey-api',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getV1Organizations = <ThrowOnError extends boolean = false>(options?: Options<GetV1OrganizationsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetV1OrganizationsResponse, GetV1OrganizationsError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations',
        ...options
    });
};

export const postV1Organizations = <ThrowOnError extends boolean = false>(options: Options<PostV1OrganizationsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1OrganizationsResponse, PostV1OrganizationsError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteV1OrganizationsByOrganizationSlug = <ThrowOnError extends boolean = false>(options: Options<DeleteV1OrganizationsByOrganizationSlugData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteV1OrganizationsByOrganizationSlugResponse, DeleteV1OrganizationsByOrganizationSlugError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}',
        ...options
    });
};

export const getV1OrganizationsByOrganizationSlugMembers = <ThrowOnError extends boolean = false>(options: Options<GetV1OrganizationsByOrganizationSlugMembersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1OrganizationsByOrganizationSlugMembersResponse, GetV1OrganizationsByOrganizationSlugMembersError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/members',
        ...options
    });
};

export const postV1OrganizationsByOrganizationSlugMembers = <ThrowOnError extends boolean = false>(options: Options<PostV1OrganizationsByOrganizationSlugMembersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1OrganizationsByOrganizationSlugMembersResponse, PostV1OrganizationsByOrganizationSlugMembersError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/members',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteV1OrganizationsByOrganizationSlugMembersByUserId = <ThrowOnError extends boolean = false>(options: Options<DeleteV1OrganizationsByOrganizationSlugMembersByUserIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteV1OrganizationsByOrganizationSlugMembersByUserIdResponse, DeleteV1OrganizationsByOrganizationSlugMembersByUserIdError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/members/{user_id}',
        ...options
    });
};

export const getV1OrganizationsByOrganizationSlugProjects = <ThrowOnError extends boolean = false>(options: Options<GetV1OrganizationsByOrganizationSlugProjectsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1OrganizationsByOrganizationSlugProjectsResponse, GetV1OrganizationsByOrganizationSlugProjectsError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects',
        ...options
    });
};

export const postV1OrganizationsByOrganizationSlugProjects = <ThrowOnError extends boolean = false>(options: Options<PostV1OrganizationsByOrganizationSlugProjectsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1OrganizationsByOrganizationSlugProjectsResponse, PostV1OrganizationsByOrganizationSlugProjectsError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteV1OrganizationsByOrganizationSlugProjectsByProjectSlug = <ThrowOnError extends boolean = false>(options: Options<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}',
        ...options
    });
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeys = <ThrowOnError extends boolean = false>(options: Options<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/api-keys',
        ...options
    });
};

export const postV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeys = <ThrowOnError extends boolean = false>(options: Options<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/api-keys',
        ...options
    });
};

export const deleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyId = <ThrowOnError extends boolean = false>(options: Options<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/api-keys/{api_key_id}',
        ...options
    });
};

export const postV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyId = <ThrowOnError extends boolean = false>(options: Options<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/api-keys/{api_key_id}',
        ...options
    });
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecifications = <ThrowOnError extends boolean = false>(options: Options<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/specifications',
        ...options
    });
};

export const deleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationId = <ThrowOnError extends boolean = false>(options: Options<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/specifications/{specification_id}',
        ...options
    });
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationId = <ThrowOnError extends boolean = false>(options: Options<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/specifications/{specification_id}',
        ...options
    });
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrl = <ThrowOnError extends boolean = false>(options: Options<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/specifications/{specification_id}/url',
        ...options
    });
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooks = <ThrowOnError extends boolean = false>(options: Options<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks',
        ...options
    });
};

export const postV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooks = <ThrowOnError extends boolean = false>(options: Options<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookId = <ThrowOnError extends boolean = false>(options: Options<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks/{webhook_id}',
        ...options
    });
};

export const getV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookId = <ThrowOnError extends boolean = false>(options: Options<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks/{webhook_id}',
        ...options
    });
};

export const postV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookId = <ThrowOnError extends boolean = false>(options: Options<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse, PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks/{webhook_id}',
        ...options
    });
};

export const postV1Specifications = <ThrowOnError extends boolean = false>(options: Options<PostV1SpecificationsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1SpecificationsResponse, PostV1SpecificationsError, ThrowOnError>({
        ...formDataBodySerializer,
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/specifications',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

export const getV1UsersMe = <ThrowOnError extends boolean = false>(options?: Options<GetV1UsersMeData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetV1UsersMeResponse, GetV1UsersMeError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/users/me',
        ...options
    });
};

export const getV1UsersByUserIdApiKeys = <ThrowOnError extends boolean = false>(options: Options<GetV1UsersByUserIdApiKeysData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1UsersByUserIdApiKeysResponse, GetV1UsersByUserIdApiKeysError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/users/{user_id}/api-keys',
        ...options
    });
};

export const postV1UsersByUserIdApiKeys = <ThrowOnError extends boolean = false>(options: Options<PostV1UsersByUserIdApiKeysData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1UsersByUserIdApiKeysResponse, PostV1UsersByUserIdApiKeysError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/users/{user_id}/api-keys',
        ...options
    });
};

export const deleteV1UsersByUserIdApiKeysByApiKeyId = <ThrowOnError extends boolean = false>(options: Options<DeleteV1UsersByUserIdApiKeysByApiKeyIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteV1UsersByUserIdApiKeysByApiKeyIdResponse, DeleteV1UsersByUserIdApiKeysByApiKeyIdError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/users/{user_id}/api-keys/{api_key_id}',
        ...options
    });
};

export const postV1UsersByUserIdApiKeysByApiKeyId = <ThrowOnError extends boolean = false>(options: Options<PostV1UsersByUserIdApiKeysByApiKeyIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1UsersByUserIdApiKeysByApiKeyIdResponse, PostV1UsersByUserIdApiKeysByApiKeyIdError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/users/{user_id}/api-keys/{api_key_id}',
        ...options
    });
};

export const getV1UsersByUserIdRoles = <ThrowOnError extends boolean = false>(options: Options<GetV1UsersByUserIdRolesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1UsersByUserIdRolesResponse, GetV1UsersByUserIdRolesError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/users/{user_id}/roles',
        ...options
    });
};

export const getV1UsersByUserIdWaitlists = <ThrowOnError extends boolean = false>(options: Options<GetV1UsersByUserIdWaitlistsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1UsersByUserIdWaitlistsResponse, GetV1UsersByUserIdWaitlistsError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/users/{user_id}/waitlists',
        ...options
    });
};

export const postV1UsersByUserIdWaitlists = <ThrowOnError extends boolean = false>(options: Options<PostV1UsersByUserIdWaitlistsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1UsersByUserIdWaitlistsResponse, PostV1UsersByUserIdWaitlistsError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/users/{user_id}/waitlists',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteV1UsersByUserIdWaitlistsByWaitlistId = <ThrowOnError extends boolean = false>(options: Options<DeleteV1UsersByUserIdWaitlistsByWaitlistIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteV1UsersByUserIdWaitlistsByWaitlistIdResponse, DeleteV1UsersByUserIdWaitlistsByWaitlistIdError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/v1/users/{user_id}/waitlists/{waitlist_id}',
        ...options
    });
};