// This file is auto-generated by @hey-api/openapi-ts

export type Specification = {
    api_key_id: string | null;
    actor: string | null;
    actor_id: string | null;
    branch: string | null;
    branch_base: string | null;
    ci_platform: string | null;
    commit_sha: string | null;
    creator_user_id: string | null;
    created_at: string;
    event_name: string | null;
    id: string;
    job: string | null;
    project_id: string;
    ref: string | null;
    ref_type: string | null;
    repository: string | null;
    run_id: string | null;
    run_number: string | null;
    updated_at: string;
    tags: Array<string>;
    version: string | null;
    workflow: string | null;
};

export type CursorResponse = {
    end_cursor: string | null;
    has_next_page: boolean | null;
    has_previous_page: boolean | null;
    start_cursor: string | null;
};

export type Organization = {
    created_at: string;
    creator_user_id: string | null;
    id: string;
    name: string;
    slug: string;
    updated_at: string;
};

export type Role = {
    created_at: string;
    id: string;
    organization_id: string;
    status: 'active' | 'invited' | 'suspended';
    updated_at: string;
    user_id: string;
};

export type User = {
    clerk_user_id: string | null;
    created_at: string;
    email: string | null;
    first_name: string | null;
    id: string;
    image_url: string | null;
    last_name: string | null;
    roles?: Array<Role>;
    updated_at: string;
};

export type Project = {
    created_at: string;
    creator_user_id: string | null;
    default_branch: string | null;
    id: string;
    name: string;
    organization_id: string;
    slug: string;
    updated_at: string;
};

export type ApiKeyConcealed = {
    created_at: string;
    creator_user_id: string | null;
    id: string;
    last_used_at: string | null;
    updated_at: string;
};

export type ApiKey = ApiKeyConcealed & {
    value: string;
};

export type WebhookConcealed = {
    created_at: string;
    creator_user_id: string | null;
    endpoint: string;
    id: string;
    is_enabled: boolean;
    project_id: string;
    updated_at: string;
};

export type Webhook = WebhookConcealed & {
    secret: string;
};

export type WaitlistFeature = 'analytics' | 'changelogs' | 'integrations' | 'mcp' | 'mocks' | 'sdks' | 'tests';

export const WaitlistFeature = {
    ANALYTICS: 'analytics',
    CHANGELOGS: 'changelogs',
    INTEGRATIONS: 'integrations',
    MCP: 'mcp',
    MOCKS: 'mocks',
    SDKS: 'sdks',
    TESTS: 'tests'
} as const;

export type Waitlist = {
    created_at: string;
    feature: WaitlistFeature;
    id: string;
    updated_at: string;
};

export type GetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type GetResponses = {
    /**
     * OK
     */
    200: string;
};

export type GetResponse = GetResponses[keyof GetResponses];

export type GetV1GetByOrganizationSlugByProjectSlugData = {
    body?: never;
    path: {
        organization_slug: string;
        project_slug: string;
    };
    query?: {
        api_key?: string;
        branch?: string;
        commit_sha?: string;
        inline?: boolean;
        latest?: boolean;
        tags?: string;
        version?: string;
    };
    url: '/v1/get/{organization_slug}/{project_slug}';
};

export type GetV1GetByOrganizationSlugByProjectSlugErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Not Found
     */
    404: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type GetV1GetByOrganizationSlugByProjectSlugError = GetV1GetByOrganizationSlugByProjectSlugErrors[keyof GetV1GetByOrganizationSlugByProjectSlugErrors];

export type GetV1GetByOrganizationSlugByProjectSlugResponses = {
    /**
     * Specification file contents
     */
    200: {
        [key: string]: unknown;
    };
};

export type GetV1GetByOrganizationSlugByProjectSlugResponse = GetV1GetByOrganizationSlugByProjectSlugResponses[keyof GetV1GetByOrganizationSlugByProjectSlugResponses];

export type PostV1InternalSyncUsersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/internal/sync-users';
};

export type PostV1InternalSyncUsersErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type PostV1InternalSyncUsersError = PostV1InternalSyncUsersErrors[keyof PostV1InternalSyncUsersErrors];

export type PostV1InternalSyncUsersResponses = {
    /**
     * OK
     */
    200: {
        numAffectedRows: string;
    };
};

export type PostV1InternalSyncUsersResponse = PostV1InternalSyncUsersResponses[keyof PostV1InternalSyncUsersResponses];

export type PostV1InternalWebhooksClerkData = {
    body: {
        data: {
            created_at: number;
            email_addresses: Array<{
                created_at: number;
                email_address: string;
                id: string;
                linked_to: Array<{
                    id: string;
                    type: string;
                }>;
                updated_at: number;
                verification: {
                    attempts: number | null;
                    expire_at: number | null;
                    status: string;
                    strategy: string;
                };
            }>;
            first_name: string | null;
            has_image: boolean;
            id: string;
            image_url: string | null;
            last_active_at: number | null;
            last_name: string | null;
            last_sign_in_at: number | null;
            mfa_disabled_at: number | null;
            mfa_enabled_at: number | null;
            passkeys: Array<{
                [key: string]: unknown;
            }>;
            password_enabled: boolean;
            phone_numbers: Array<{
                [key: string]: unknown;
            }>;
            primary_email_address_id: string | null;
            primary_phone_number_id: string | null;
            profile_image_url: string | null;
            two_factor_enabled: boolean;
            updated_at: number;
            username: string | null;
        };
        type: 'user.created' | 'user.updated';
    } | {
        data: {
            deleted: boolean;
            id: string;
        };
        type: 'user.deleted';
    } | {
        data: {
            id: string;
        };
        type: 'organization.created' | 'organization.updated';
    } | {
        data: {
            id: string;
        };
        type: 'organization.deleted';
    } | {
        data: {
            id: string;
        };
        type: 'organizationMembership.created' | 'organizationMembership.updated';
    } | {
        data: {
            id: string;
        };
        type: 'organizationMembership.deleted';
    } | {
        data: {
            [key: string]: unknown;
        };
        type: 'role.created' | 'role.updated';
    } | {
        data: {
            [key: string]: unknown;
        };
        type: 'role.deleted';
    };
    path?: never;
    query?: never;
    url: '/v1/internal/webhooks/clerk';
};

export type PostV1InternalWebhooksClerkErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type PostV1InternalWebhooksClerkError = PostV1InternalWebhooksClerkErrors[keyof PostV1InternalWebhooksClerkErrors];

export type PostV1InternalWebhooksClerkResponses = {
    /**
     * OK
     */
    200: {
        message: string;
    };
};

export type PostV1InternalWebhooksClerkResponse = PostV1InternalWebhooksClerkResponses[keyof PostV1InternalWebhooksClerkResponses];

export type PostV1InternalWebhooksHeyApiData = {
    body: {
        data: Specification;
        id: string;
        object: 'event';
        timestamp: number;
        type: 'specification.created' | 'specification.deleted';
    };
    path?: never;
    query?: never;
    url: '/v1/internal/webhooks/hey-api';
};

export type PostV1InternalWebhooksHeyApiErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type PostV1InternalWebhooksHeyApiError = PostV1InternalWebhooksHeyApiErrors[keyof PostV1InternalWebhooksHeyApiErrors];

export type PostV1InternalWebhooksHeyApiResponses = {
    /**
     * OK
     */
    200: {
        message: string;
    };
};

export type PostV1InternalWebhooksHeyApiResponse = PostV1InternalWebhooksHeyApiResponses[keyof PostV1InternalWebhooksHeyApiResponses];

export type GetV1OrganizationsData = {
    body?: never;
    path?: never;
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
    url: '/v1/organizations';
};

export type GetV1OrganizationsErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type GetV1OrganizationsError = GetV1OrganizationsErrors[keyof GetV1OrganizationsErrors];

export type GetV1OrganizationsResponses = {
    /**
     * OK
     */
    200: {
        filters: CursorResponse;
        items: Array<Organization>;
    };
};

export type GetV1OrganizationsResponse = GetV1OrganizationsResponses[keyof GetV1OrganizationsResponses];

export type PostV1OrganizationsData = {
    body: {
        name: string;
    };
    path?: never;
    query?: never;
    url: '/v1/organizations';
};

export type PostV1OrganizationsErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type PostV1OrganizationsError = PostV1OrganizationsErrors[keyof PostV1OrganizationsErrors];

export type PostV1OrganizationsResponses = {
    /**
     * OK
     */
    200: Organization;
};

export type PostV1OrganizationsResponse = PostV1OrganizationsResponses[keyof PostV1OrganizationsResponses];

export type DeleteV1OrganizationsByOrganizationSlugData = {
    body?: never;
    path: {
        organization_slug: string;
    };
    query?: never;
    url: '/v1/organizations/{organization_slug}';
};

export type DeleteV1OrganizationsByOrganizationSlugErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type DeleteV1OrganizationsByOrganizationSlugError = DeleteV1OrganizationsByOrganizationSlugErrors[keyof DeleteV1OrganizationsByOrganizationSlugErrors];

export type DeleteV1OrganizationsByOrganizationSlugResponses = {
    /**
     * OK
     */
    200: Organization;
};

export type DeleteV1OrganizationsByOrganizationSlugResponse = DeleteV1OrganizationsByOrganizationSlugResponses[keyof DeleteV1OrganizationsByOrganizationSlugResponses];

export type GetV1OrganizationsByOrganizationSlugMembersData = {
    body?: never;
    path: {
        organization_slug: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
    url: '/v1/organizations/{organization_slug}/members';
};

export type GetV1OrganizationsByOrganizationSlugMembersErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type GetV1OrganizationsByOrganizationSlugMembersError = GetV1OrganizationsByOrganizationSlugMembersErrors[keyof GetV1OrganizationsByOrganizationSlugMembersErrors];

export type GetV1OrganizationsByOrganizationSlugMembersResponses = {
    /**
     * OK
     */
    200: {
        filters: CursorResponse;
        items: Array<User>;
    };
};

export type GetV1OrganizationsByOrganizationSlugMembersResponse = GetV1OrganizationsByOrganizationSlugMembersResponses[keyof GetV1OrganizationsByOrganizationSlugMembersResponses];

export type PostV1OrganizationsByOrganizationSlugMembersData = {
    body: {
        emails: Array<string>;
    };
    path: {
        organization_slug: string;
    };
    query?: never;
    url: '/v1/organizations/{organization_slug}/members';
};

export type PostV1OrganizationsByOrganizationSlugMembersErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type PostV1OrganizationsByOrganizationSlugMembersError = PostV1OrganizationsByOrganizationSlugMembersErrors[keyof PostV1OrganizationsByOrganizationSlugMembersErrors];

export type PostV1OrganizationsByOrganizationSlugMembersResponses = {
    /**
     * OK
     */
    200: {
        users: Array<User>;
    };
};

export type PostV1OrganizationsByOrganizationSlugMembersResponse = PostV1OrganizationsByOrganizationSlugMembersResponses[keyof PostV1OrganizationsByOrganizationSlugMembersResponses];

export type DeleteV1OrganizationsByOrganizationSlugMembersByUserIdData = {
    body?: never;
    path: {
        organization_slug: string;
        user_id: string;
    };
    query?: never;
    url: '/v1/organizations/{organization_slug}/members/{user_id}';
};

export type DeleteV1OrganizationsByOrganizationSlugMembersByUserIdErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type DeleteV1OrganizationsByOrganizationSlugMembersByUserIdError = DeleteV1OrganizationsByOrganizationSlugMembersByUserIdErrors[keyof DeleteV1OrganizationsByOrganizationSlugMembersByUserIdErrors];

export type DeleteV1OrganizationsByOrganizationSlugMembersByUserIdResponses = {
    /**
     * OK
     */
    200: Role;
};

export type DeleteV1OrganizationsByOrganizationSlugMembersByUserIdResponse = DeleteV1OrganizationsByOrganizationSlugMembersByUserIdResponses[keyof DeleteV1OrganizationsByOrganizationSlugMembersByUserIdResponses];

export type GetV1OrganizationsByOrganizationSlugProjectsData = {
    body?: never;
    path: {
        organization_slug: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
    url: '/v1/organizations/{organization_slug}/projects';
};

export type GetV1OrganizationsByOrganizationSlugProjectsErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsError = GetV1OrganizationsByOrganizationSlugProjectsErrors[keyof GetV1OrganizationsByOrganizationSlugProjectsErrors];

export type GetV1OrganizationsByOrganizationSlugProjectsResponses = {
    /**
     * OK
     */
    200: {
        filters: CursorResponse;
        items: Array<Project>;
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsResponse = GetV1OrganizationsByOrganizationSlugProjectsResponses[keyof GetV1OrganizationsByOrganizationSlugProjectsResponses];

export type PostV1OrganizationsByOrganizationSlugProjectsData = {
    body: {
        name: string;
    };
    path: {
        organization_slug: string;
    };
    query?: never;
    url: '/v1/organizations/{organization_slug}/projects';
};

export type PostV1OrganizationsByOrganizationSlugProjectsErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type PostV1OrganizationsByOrganizationSlugProjectsError = PostV1OrganizationsByOrganizationSlugProjectsErrors[keyof PostV1OrganizationsByOrganizationSlugProjectsErrors];

export type PostV1OrganizationsByOrganizationSlugProjectsResponses = {
    /**
     * OK
     */
    200: Project;
};

export type PostV1OrganizationsByOrganizationSlugProjectsResponse = PostV1OrganizationsByOrganizationSlugProjectsResponses[keyof PostV1OrganizationsByOrganizationSlugProjectsResponses];

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugData = {
    body?: never;
    path: {
        organization_slug: string;
        project_slug: string;
    };
    query?: never;
    url: '/v1/organizations/{organization_slug}/projects/{project_slug}';
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugError = DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugErrors[keyof DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugErrors];

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugResponses = {
    /**
     * OK
     */
    200: Project;
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugResponse = DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugResponses[keyof DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugResponses];

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysData = {
    body?: never;
    path: {
        organization_slug: string;
        project_slug: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
    url: '/v1/organizations/{organization_slug}/projects/{project_slug}/api-keys';
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysError = GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysErrors[keyof GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysErrors];

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponses = {
    /**
     * OK
     */
    200: {
        filters: CursorResponse;
        items: Array<ApiKeyConcealed>;
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse = GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponses[keyof GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponses];

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysData = {
    body?: never;
    path: {
        organization_slug: string;
        project_slug: string;
    };
    query?: never;
    url: '/v1/organizations/{organization_slug}/projects/{project_slug}/api-keys';
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysError = PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysErrors[keyof PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysErrors];

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponses = {
    /**
     * OK
     */
    200: ApiKey;
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponse = PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponses[keyof PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysResponses];

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdData = {
    body?: never;
    path: {
        api_key_id: string;
        organization_slug: string;
        project_slug: string;
    };
    query?: never;
    url: '/v1/organizations/{organization_slug}/projects/{project_slug}/api-keys/{api_key_id}';
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdError = DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdErrors[keyof DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdErrors];

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponses = {
    /**
     * OK
     */
    200: ApiKey;
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse = DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponses[keyof DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponses];

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdData = {
    body?: never;
    path: {
        api_key_id: string;
        organization_slug: string;
        project_slug: string;
    };
    query?: never;
    url: '/v1/organizations/{organization_slug}/projects/{project_slug}/api-keys/{api_key_id}';
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdError = PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdErrors[keyof PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdErrors];

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponses = {
    /**
     * OK
     */
    200: ApiKey;
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponse = PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponses[keyof PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugApiKeysByApiKeyIdResponses];

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsData = {
    body?: never;
    path: {
        organization_slug: string;
        project_slug: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
    url: '/v1/organizations/{organization_slug}/projects/{project_slug}/specifications';
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsError = GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsErrors[keyof GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsErrors];

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsResponses = {
    /**
     * OK
     */
    200: {
        filters: CursorResponse;
        items: Array<Specification>;
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsResponse = GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsResponses[keyof GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsResponses];

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdData = {
    body?: never;
    path: {
        organization_slug: string;
        project_slug: string;
        specification_id: string;
    };
    query?: never;
    url: '/v1/organizations/{organization_slug}/projects/{project_slug}/specifications/{specification_id}';
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Not Found
     */
    404: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdError = DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdErrors[keyof DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdErrors];

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponses = {
    /**
     * OK
     */
    200: Specification;
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponse = DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponses[keyof DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponses];

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdData = {
    body?: never;
    path: {
        organization_slug: string;
        project_slug: string;
        specification_id: string;
    };
    query?: {
        inline?: boolean;
    };
    url: '/v1/organizations/{organization_slug}/projects/{project_slug}/specifications/{specification_id}';
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Not Found
     */
    404: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdError = GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdErrors[keyof GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdErrors];

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponses = {
    /**
     * Specification file contents
     */
    200: {
        [key: string]: unknown;
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponse = GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponses[keyof GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdResponses];

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlData = {
    body?: never;
    path: {
        organization_slug: string;
        project_slug: string;
        specification_id: string;
    };
    query?: never;
    url: '/v1/organizations/{organization_slug}/projects/{project_slug}/specifications/{specification_id}/url';
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Not Found
     */
    404: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlError = GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlErrors[keyof GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlErrors];

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlResponses = {
    /**
     * OK
     */
    200: {
        url: string;
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlResponse = GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlResponses[keyof GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugSpecificationsBySpecificationIdUrlResponses];

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksData = {
    body?: never;
    path: {
        organization_slug: string;
        project_slug: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
    url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks';
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksError = GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksErrors[keyof GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksErrors];

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponses = {
    /**
     * OK
     */
    200: {
        filters: CursorResponse;
        items: Array<WebhookConcealed>;
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse = GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponses[keyof GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponses];

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksData = {
    body: {
        endpoint: string;
    };
    path: {
        organization_slug: string;
        project_slug: string;
    };
    query?: never;
    url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks';
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksError = PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksErrors[keyof PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksErrors];

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponses = {
    /**
     * OK
     */
    200: Webhook;
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponse = PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponses[keyof PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksResponses];

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData = {
    body?: never;
    path: {
        organization_slug: string;
        project_slug: string;
        webhook_id: string;
    };
    query?: never;
    url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks/{webhook_id}';
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError = DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdErrors[keyof DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdErrors];

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponses = {
    /**
     * OK
     */
    200: ApiKey;
};

export type DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse = DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponses[keyof DeleteV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponses];

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData = {
    body?: never;
    path: {
        organization_slug: string;
        project_slug: string;
        webhook_id: string;
    };
    query?: never;
    url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks/{webhook_id}';
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Not Found
     */
    404: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError = GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdErrors[keyof GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdErrors];

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponses = {
    /**
     * OK
     */
    200: WebhookConcealed;
};

export type GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse = GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponses[keyof GetV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponses];

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdData = {
    body?: never;
    path: {
        organization_slug: string;
        project_slug: string;
        webhook_id: string;
    };
    query?: never;
    url: '/v1/organizations/{organization_slug}/projects/{project_slug}/webhooks/{webhook_id}';
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdError = PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdErrors[keyof PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdErrors];

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponses = {
    /**
     * OK
     */
    200: Webhook;
};

export type PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponse = PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponses[keyof PostV1OrganizationsByOrganizationSlugProjectsByProjectSlugWebhooksByWebhookIdResponses];

export type PostV1SpecificationsData = {
    body: {
        actor?: string;
        actor_id?: string;
        branch?: string;
        branch_base?: string;
        ci_platform?: string;
        commit_sha?: string;
        default_branch?: string;
        dry_run?: string;
        event_name?: string;
        job?: string;
        ref?: string;
        ref_type?: string;
        repository?: string;
        run_id?: string;
        run_number?: string;
        specification: Blob | File;
        tags?: string;
        workflow?: string;
    };
    path?: never;
    query?: never;
    url: '/v1/specifications';
};

export type PostV1SpecificationsErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Content Too Large
     */
    413: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type PostV1SpecificationsError = PostV1SpecificationsErrors[keyof PostV1SpecificationsErrors];

export type PostV1SpecificationsResponses = {
    /**
     * OK
     */
    200: Specification;
};

export type PostV1SpecificationsResponse = PostV1SpecificationsResponses[keyof PostV1SpecificationsResponses];

export type GetV1UsersMeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/users/me';
};

export type GetV1UsersMeErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type GetV1UsersMeError = GetV1UsersMeErrors[keyof GetV1UsersMeErrors];

export type GetV1UsersMeResponses = {
    /**
     * OK
     */
    200: User;
};

export type GetV1UsersMeResponse = GetV1UsersMeResponses[keyof GetV1UsersMeResponses];

export type GetV1UsersByUserIdApiKeysData = {
    body?: never;
    path: {
        user_id: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
    url: '/v1/users/{user_id}/api-keys';
};

export type GetV1UsersByUserIdApiKeysErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type GetV1UsersByUserIdApiKeysError = GetV1UsersByUserIdApiKeysErrors[keyof GetV1UsersByUserIdApiKeysErrors];

export type GetV1UsersByUserIdApiKeysResponses = {
    /**
     * OK
     */
    200: {
        filters: CursorResponse;
        items: Array<ApiKeyConcealed>;
    };
};

export type GetV1UsersByUserIdApiKeysResponse = GetV1UsersByUserIdApiKeysResponses[keyof GetV1UsersByUserIdApiKeysResponses];

export type PostV1UsersByUserIdApiKeysData = {
    body?: never;
    path: {
        user_id: string;
    };
    query?: never;
    url: '/v1/users/{user_id}/api-keys';
};

export type PostV1UsersByUserIdApiKeysErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type PostV1UsersByUserIdApiKeysError = PostV1UsersByUserIdApiKeysErrors[keyof PostV1UsersByUserIdApiKeysErrors];

export type PostV1UsersByUserIdApiKeysResponses = {
    /**
     * OK
     */
    200: ApiKey;
};

export type PostV1UsersByUserIdApiKeysResponse = PostV1UsersByUserIdApiKeysResponses[keyof PostV1UsersByUserIdApiKeysResponses];

export type DeleteV1UsersByUserIdApiKeysByApiKeyIdData = {
    body?: never;
    path: {
        api_key_id: string;
        user_id: string;
    };
    query?: never;
    url: '/v1/users/{user_id}/api-keys/{api_key_id}';
};

export type DeleteV1UsersByUserIdApiKeysByApiKeyIdErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type DeleteV1UsersByUserIdApiKeysByApiKeyIdError = DeleteV1UsersByUserIdApiKeysByApiKeyIdErrors[keyof DeleteV1UsersByUserIdApiKeysByApiKeyIdErrors];

export type DeleteV1UsersByUserIdApiKeysByApiKeyIdResponses = {
    /**
     * OK
     */
    200: ApiKey;
};

export type DeleteV1UsersByUserIdApiKeysByApiKeyIdResponse = DeleteV1UsersByUserIdApiKeysByApiKeyIdResponses[keyof DeleteV1UsersByUserIdApiKeysByApiKeyIdResponses];

export type PostV1UsersByUserIdApiKeysByApiKeyIdData = {
    body?: never;
    path: {
        api_key_id: string;
        user_id: string;
    };
    query?: never;
    url: '/v1/users/{user_id}/api-keys/{api_key_id}';
};

export type PostV1UsersByUserIdApiKeysByApiKeyIdErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type PostV1UsersByUserIdApiKeysByApiKeyIdError = PostV1UsersByUserIdApiKeysByApiKeyIdErrors[keyof PostV1UsersByUserIdApiKeysByApiKeyIdErrors];

export type PostV1UsersByUserIdApiKeysByApiKeyIdResponses = {
    /**
     * OK
     */
    200: ApiKey;
};

export type PostV1UsersByUserIdApiKeysByApiKeyIdResponse = PostV1UsersByUserIdApiKeysByApiKeyIdResponses[keyof PostV1UsersByUserIdApiKeysByApiKeyIdResponses];

export type GetV1UsersByUserIdRolesData = {
    body?: never;
    path: {
        user_id: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
    url: '/v1/users/{user_id}/roles';
};

export type GetV1UsersByUserIdRolesErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type GetV1UsersByUserIdRolesError = GetV1UsersByUserIdRolesErrors[keyof GetV1UsersByUserIdRolesErrors];

export type GetV1UsersByUserIdRolesResponses = {
    /**
     * OK
     */
    200: {
        filters: CursorResponse;
        items: Array<Role>;
    };
};

export type GetV1UsersByUserIdRolesResponse = GetV1UsersByUserIdRolesResponses[keyof GetV1UsersByUserIdRolesResponses];

export type GetV1UsersByUserIdWaitlistsData = {
    body?: never;
    path: {
        user_id: string;
    };
    query?: {
        after?: string;
        before?: string;
        limit?: number;
    };
    url: '/v1/users/{user_id}/waitlists';
};

export type GetV1UsersByUserIdWaitlistsErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type GetV1UsersByUserIdWaitlistsError = GetV1UsersByUserIdWaitlistsErrors[keyof GetV1UsersByUserIdWaitlistsErrors];

export type GetV1UsersByUserIdWaitlistsResponses = {
    /**
     * OK
     */
    200: {
        filters: CursorResponse;
        items: Array<Waitlist>;
    };
};

export type GetV1UsersByUserIdWaitlistsResponse = GetV1UsersByUserIdWaitlistsResponses[keyof GetV1UsersByUserIdWaitlistsResponses];

export type PostV1UsersByUserIdWaitlistsData = {
    body: {
        feature: WaitlistFeature;
    };
    path: {
        user_id: string;
    };
    query?: never;
    url: '/v1/users/{user_id}/waitlists';
};

export type PostV1UsersByUserIdWaitlistsErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type PostV1UsersByUserIdWaitlistsError = PostV1UsersByUserIdWaitlistsErrors[keyof PostV1UsersByUserIdWaitlistsErrors];

export type PostV1UsersByUserIdWaitlistsResponses = {
    /**
     * OK
     */
    200: Waitlist;
};

export type PostV1UsersByUserIdWaitlistsResponse = PostV1UsersByUserIdWaitlistsResponses[keyof PostV1UsersByUserIdWaitlistsResponses];

export type DeleteV1UsersByUserIdWaitlistsByWaitlistIdData = {
    body?: never;
    path: {
        waitlist_id: string;
        user_id: string;
    };
    query?: never;
    url: '/v1/users/{user_id}/waitlists/{waitlist_id}';
};

export type DeleteV1UsersByUserIdWaitlistsByWaitlistIdErrors = {
    /**
     * Unauthorized
     */
    401: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
    /**
     * Forbidden
     */
    403: {
        error: {
            message: string;
            request_id: string;
            status: number;
            timestamp: string;
        };
    };
};

export type DeleteV1UsersByUserIdWaitlistsByWaitlistIdError = DeleteV1UsersByUserIdWaitlistsByWaitlistIdErrors[keyof DeleteV1UsersByUserIdWaitlistsByWaitlistIdErrors];

export type DeleteV1UsersByUserIdWaitlistsByWaitlistIdResponses = {
    /**
     * OK
     */
    200: Waitlist;
};

export type DeleteV1UsersByUserIdWaitlistsByWaitlistIdResponse = DeleteV1UsersByUserIdWaitlistsByWaitlistIdResponses[keyof DeleteV1UsersByUserIdWaitlistsByWaitlistIdResponses];

export type ClientOptions = {
    baseUrl: string;
};